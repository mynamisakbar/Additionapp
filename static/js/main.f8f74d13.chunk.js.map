{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","className","href","Counter","handleIncrement","setState","value","state","prevProps","prevState","console","log","counter","this","props","getBadgeClasses","formatCount","onClick","onIncrement","onDelete","id","classes","Component","Counters","onReset","counters","map","App","index","indexOf","handleReset","c","handleDelete","counterId","filter","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8f74d13.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n// stateless functional component\r\nconst NavBar = ( {totalCounters }) => {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n   \r\n          <a className=\"navbar-brand\" href=\"www.google.com\">Navbar{\"\"}\r\n          <span className=\"badge badge-pill badge-secondary\">\r\n              {totalCounters}\r\n          </span></a>\r\n\r\n      </nav>\r\n\r\n    );\r\n}\r\n\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\n\r\nclass Counter extends Component {\r\n    componentDidUpdate(prevProps, prevState){\r\n\r\n        console.log('prevProps', prevProps);\r\n        console.log('prevState', prevState);\r\n        if(prevProps.counter.value !== this.props.counter.value) {\r\n            // ajax call and get new data from the server\r\n        }\r\n\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"counter - Unmount \");\r\n    }\r\n\r\n\r\n    handleIncrement = () => {\r\n        this.setState({value: this.state.value + 1});\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n                <button \r\n                onClick={() => this.props.onIncrement(this.props.counter)} \r\n                className=\"btn btn-secondary btn-sm\">Increment</button>\r\n                <button onClick={() => this.props.onDelete(this.props.counter.id)} \r\n                className=\"btn btn-danger btn-sm m-2\">Delete</button>\r\n            </div>\r\n        );\r\n    }\r\n    formatCount() {\r\n        const { value } = this.props.counter;\r\n        return value === 0 ? 'zero' : value;\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += this.props.counter.value === 0 ? \"warning \" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n             \r\n\r\n\r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from \"./counter\";\r\n\r\n\r\nclass Counters extends Component {\r\n   \r\n    render (){\r\n        console.log('Counter - Rendered');\r\n\r\n        const{\r\n            onReset, counters, onIncrement, onDelete\r\n        } = this.props;\r\n        return(\r\n            <div>\r\n\r\n            <button\r\n                onClick={onReset}\r\n                className=\"btn btn-primary btn-sm m-2\">reset</button>\r\n              { this.props.counters.map(counter => (\r\n                 <Counter \r\n                 key={counter.id} \r\n                 onDelete ={this.props.onDelete} \r\n                 onIncrement ={this.props.onIncrement}\r\n                 counter = {counter}\r\n                  />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Counters;","import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from \"./components/counters\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    counters: [\n      {id: 1, value:4},\n      {id: 2, value:0},\n      {id: 3, value:0},\n      {id: 4, value:0}\n  ]\n};\n\nconstructor(props) {\n  super(props);\n  console.log(\"App - Constructor\");\n  //this.state = this.props.something;\n  \n}\n\ncomponentDidMount(){\n console.log('App - MOunter');\n}\n      handleIncrement = counter => {\n          const counters = [...this.state.counters];\n          const index = counters.indexOf(counter);\n          counters[index] = {...counter};\n          counters[index].value++;\n         this.setState({ counters });\n      }\nhandleReset = () => {\nconst counters = this.state.counters.map(c => {\n    c.value=0;\n    return c;\n});\nthis.setState({ counters });\n};\n\nhandleDelete = (counterId) => {\n  const counters = this.state.counters.filter(c => c.id !== counterId);\n  this.setState({ counters });\n}\n\n  render (){\n    console.log(\"App - Rendered\");\n  return (\n    <React.Fragment>\n    <NavBar totalCounters={this.state.counters.filter(c => c.value>0).length}/>\n    <main className=\"container\">\n      <Counters \n      counters= {this.state.counters}\n      onReset={this.handleReset}\n       onIncrement={this.handleIncrement}\n      onDelete={this.handleDelete} />\n    </main>\n\n</React.Fragment>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import Counter from './components/counter';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}